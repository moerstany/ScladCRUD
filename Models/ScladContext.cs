// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;

namespace ScladCRUD.Models
{
    public partial class ScladContext : IdentityDbContext<IdentityUser>
    {
        
        public ScladContext()
        {
        }

        public ScladContext(DbContextOptions<ScladContext> options)
            : base(options)
        {
        }

        public  DbSet<Catalog1> Catalog1 { get; set; }
        
        public  DbSet<Manager1> Manager1 { get; set; }
        public  DbSet<Order1> Order1 { get; set; }
        public  DbSet<Product1> Product1 { get; set; }
         

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning 
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasPostgresExtension("btree_gin")
                .HasPostgresExtension("btree_gist")
                .HasPostgresExtension("citext")
                .HasPostgresExtension("cube")
                .HasPostgresExtension("dblink")
                .HasPostgresExtension("dict_int")
                .HasPostgresExtension("dict_xsyn")
                .HasPostgresExtension("earthdistance")
                .HasPostgresExtension("fuzzystrmatch")
                .HasPostgresExtension("hstore")
                .HasPostgresExtension("intarray")
                .HasPostgresExtension("ltree")
                .HasPostgresExtension("pg_stat_statements")
                .HasPostgresExtension("pg_trgm")
                .HasPostgresExtension("pgcrypto")
                .HasPostgresExtension("pgrowlocks")
                .HasPostgresExtension("pgstattuple")
                .HasPostgresExtension("tablefunc")
                .HasPostgresExtension("unaccent")
                .HasPostgresExtension("uuid-ossp")
                .HasPostgresExtension("xml2");

            modelBuilder.Entity<Catalog1>(entity =>
            {
                entity.HasKey(e => e.IdCatalog)
                    .HasName("catalog1_pkey");

                entity.HasOne(d => d.IdProductNavigation)
                    .WithMany(p => p.Catalog1)
                    .HasForeignKey(d => d.IdProduct)
                    .OnDelete(DeleteBehavior.Restrict)
                    .HasConstraintName("catalog1_id_product_fkey");
            });

            

            modelBuilder.Entity<Manager1>(entity =>
            {
                entity.HasKey(e => e.IdManager)
                    .HasName("manager1_pkey");

                entity.Property(e => e.IdManager).UseIdentityAlwaysColumn();
            });

            modelBuilder.Entity<Order1>(entity =>
            {
                entity.HasKey(e => e.IdOrder)
                    .HasName("order1_pkey");

                

                entity.HasOne(d => d.IdProductNavigation)
                    .WithMany(p => p.Order1)
                    .HasForeignKey(d => d.IdProduct)
                    .OnDelete(DeleteBehavior.Restrict)
                    .HasConstraintName("order1_id_product_fkey");
            });

            modelBuilder.Entity<Product1>(entity =>
            {
                entity.HasKey(e => e.IdProduct)
                    .HasName("product1_pkey");

                entity.Property(e => e.IdProduct).UseIdentityAlwaysColumn();
            });
            base.OnModelCreating(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}